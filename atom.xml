<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cutezhangq.github.io</id>
    <title>Gridea</title>
    <updated>2020-04-01T07:20:11.618Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cutezhangq.github.io"/>
    <link rel="self" href="https://cutezhangq.github.io/atom.xml"/>
    <subtitle>温故知新</subtitle>
    <logo>https://cutezhangq.github.io/images/avatar.png</logo>
    <icon>https://cutezhangq.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[面试1]]></title>
        <id>https://cutezhangq.github.io/post/interview-question/</id>
        <link href="https://cutezhangq.github.io/post/interview-question/">
        </link>
        <updated>2020-04-01T01:22:20.000Z</updated>
        <content type="html"><![CDATA[<p>111</p>
<pre><code class="language-javascript">git clone
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git]]></title>
        <id>https://cutezhangq.github.io/post/git/</id>
        <link href="https://cutezhangq.github.io/post/git/">
        </link>
        <updated>2020-03-22T06:51:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="定义">定义</h1>
<p>是一个分布式版本控制工具（系统）。</p>
<h1 id="git特点">Git特点</h1>
<p>1.尽可能添加数据而不是删除或修改数据，存储能力强，容易备份</p>
<p>2.完整性保证（对于每次提交做Hash的操作）</p>
<p>3.与linux命令全面兼容</p>
<p>4.良好性能，支持离线（在本地完成）</p>
<p>5.制定工作流</p>
<p>6.分布式仓库</p>
<h1 id="git官网">Git官网</h1>
<p><a href="https://git-scm.com/book/zh/v2">https://git-scm.com/book/zh/v2</a></p>
<h1 id="git三种状态三个逻辑区域">Git三种状态,三个逻辑区域</h1>
<h2 id="三种状态">三种状态</h2>
<ul>
<li>
<p>modified(已修改)</p>
</li>
<li>
<p>staged(已暂存)</p>
</li>
<li>
<p>committed(已提交)</p>
</li>
</ul>
<h2 id="三种分区">三种分区</h2>
<p>git分为：<code>工作区</code>，<code>暂存区</code>，<code>本地库</code>，<code>远程区</code>  四块大区域</p>
<h2 id="对应关系">对应关系</h2>
<figure data-type="image" tabindex="1"><img src="https://cutezhangq.github.io/post-images/1585704345724.jpg" alt="" loading="lazy"></figure>
<h1 id="git文件内容结构">.Git文件内容结构</h1>
<figure data-type="image" tabindex="2"><img src="https://cutezhangq.github.io/post-images/1585704336057.png" alt="" loading="lazy"></figure>
<h1 id="git命令">Git命令</h1>
<h2 id="搭建git仓库">搭建Git仓库</h2>
<h3 id="两种场景">两种场景：</h3>
<p>使用<code>init</code>初始化，将本地的目录变成git<code>本地仓库</code></p>
<ul>
<li>1.已有项目，将项目纳入Git管理</li>
</ul>
<pre><code class="language-cmd">cd 项目所在文件夹
git init
</code></pre>
<ul>
<li>2.没有项目，新建用Git管理的项目</li>
</ul>
<pre><code class="language-cmd">cd 项目所在文件夹
git init your_project   #会在当前路径下创建和项目名称同名的文件夹
</code></pre>
<h3 id="查看本地目录的状态">查看本地目录的状态</h3>
<pre><code class="language-cmd">git status
</code></pre>
<h3 id="本地仓库与远程仓库关联">本地仓库与远程仓库关联</h3>
<p>与<code>远程仓库</code>关联，（此前已在码云等上注册远程仓库）</p>
<pre><code class="language-cmd">git add origin 远程仓库地址
</code></pre>
<hr>
<h2 id="更新项目">更新项目</h2>
<p>准备上传你的项目之前，最好更新一下项目，确保没有和远程仓库的代码有<code>冲突</code></p>
<pre><code class="language-cmd">git pull --rebase origin master
</code></pre>
<hr>
<h2 id="提交项目">提交项目</h2>
<pre><code class="language-cmd">git add .           #添加目录下所有发生改变的文件
git commit -m           #'注释信息'
git push -u origin master       #本地仓库代码提交至远程仓库(有时候会提交失败，可以尝试git push -u origin master -f 强制提交,只建议在第一次提交中使用)
</code></pre>
<hr>
<h2 id="克隆项目">克隆项目</h2>
<pre><code class="language-cmd">git clone 远程仓库地址
</code></pre>
<hr>
<h2 id="分支相关命令">分支相关命令</h2>
<ul>
<li>查看所有分支</li>
</ul>
<pre><code class="language-cmd">git branch  -a
</code></pre>
<ul>
<li>创建分支</li>
</ul>
<pre><code class="language-cmd">git branch 分支名
</code></pre>
<ul>
<li>切换到某一分支</li>
</ul>
<pre><code class="language-cmd">git checkout  分支名
</code></pre>
<ul>
<li><code>合并分支</code></li>
</ul>
<pre><code class="language-cmd">git merge 分支名
</code></pre>
<ul>
<li><code>创建远程的分支,并且把本地分支推送到远程分支上</code></li>
</ul>
<pre><code class="language-cmd">git push origin 分支名
</code></pre>
<ul>
<li>删除本地分支</li>
</ul>
<pre><code class="language-cmd">git branch -d 分支名
</code></pre>
<ul>
<li>查看本地分支状态</li>
</ul>
<pre><code class="language-cmd">git branch
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://cutezhangq.github.io/post/hello-gridea/</id>
        <link href="https://cutezhangq.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>